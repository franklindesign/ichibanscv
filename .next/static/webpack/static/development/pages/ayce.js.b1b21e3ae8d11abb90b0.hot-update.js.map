{"version":3,"file":"static/webpack/static/development/pages/ayce.js.b1b21e3ae8d11abb90b0.hot-update.js","sources":["webpack:///./components/AyceMenu.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const sushis = [\n    { id: 1, item: \"Tuna\" },\n    { id: 2, item: \"Salmon\" },\n    { id: 3, item: \"Escolar (Ono)\" },\n    { id: 4, item: \"Albacore\" },\n    { id: 5, item: \"Halibut\" },\n    { id: 6, item: \"Yellowtail\" },\n    { id: 7, item: \"Shrimp\" },\n    { id: 8, item: \"White Fish\" },\n    { id: 9, item: \"Crab\" },\n    { id: 10, item: \"Red Clam\" },\n    { id: 11, item: \"Octopus\" },\n    { id: 12, item: \"Egg\" },\n    { id: 13, item: \"Smelt Egg\" },\n    { id: 14, item: \"Squid\" },\n    { id: 15, item: \"Fresh Water Eel\" },\n    { id: 16, item: \"Salmon Egg\" },\n    { id: 17, item: \"Ocean Striped Bass\" },\n    { id: 18, item: \"Scallop\" },\n    { id: 19, item: \"Mackerel\" }\n  ];\n  const listSushis = sushis.map(sushi => <li key={sushi.id}>{sushi.item}</li>);\n\n  const regularRolls = [\n    { id: 1, item: \"Tuna Roll\" },\n    { id: 2, item: \"Crab Roll\" },\n    { id: 3, item: \"Eel Roll\" },\n    { id: 4, item: \"Scallop Roll\" },\n    { id: 5, item: \"Avocado Roll\" },\n    { id: 6, item: \"Shrimp Roll\" },\n    { id: 7, item: \"Cucumber Roll\" },\n    { id: 8, item: \"Yellowtail Roll\" },\n    { id: 9, item: \"California Roll\" },\n    { id: 10, item: \"Salmon Roll\" },\n    { id: 11, item: \"Vegetable Roll\" },\n    { id: 12, item: \"Spicy Tuna Roll\" },\n    { id: 13, item: \"Salmon Skin Roll\" },\n    { id: 14, item: \"Shrimp Crab Roll\" },\n    { id: 15, item: \"Asparagus Roll\" },\n    { id: 16, item: \"Albacore Roll\" },\n    { id: 17, item: \"Philly Roll\" }\n  ];\n\n  const listRegularRolls = regularRolls.map(regularRoll => (\n    <li key={regularRoll.id}>{regularRoll.item}</li>\n  ));\n\n  const freshRolls = [\n    { id: 1, item: \"Sakura Roll\" },\n    { id: 2, item: \"Lemon Roll\" },\n    { id: 3, item: \"Spicy Albacore Crunch Roll\" },\n    { id: 4, item: \"Rainbow Roll\" },\n    { id: 5, item: \"Alaskan Roll\" },\n    { id: 6, item: \"Albacore Delight Roll\" },\n    { id: 7, item: \"Mexican Roll\" },\n    { id: 8, item: \"Hawaiian Roll\" },\n    { id: 9, item: \"911 Roll\" }\n  ];\n  const listFreshRolls = freshRolls.map(freshRoll => (\n    <li key={freshRoll.id}>{freshRoll.item}</li>\n  ));\n\n  const tempuraRolls = [\n    { id: 1, item: \"Crunch Roll\" },\n    { id: 2, item: \"Popcorn Lobster Roll\" },\n    { id: 3, item: \"Crunch Scallop Roll\" },\n    { id: 4, item: \"Heart Attack\" },\n    { id: 5, item: \"California Tempura Roll\" },\n    { id: 6, item: \"Tempura Roll\" },\n    { id: 7, item: \"Tiger Roll\" },\n    { id: 8, item: \"Vegas Roll\" },\n    { id: 9, item: \"Spicy Tuna Tempura Roll\" },\n    { id: 10, item: \"Spider Roll\" }\n  ];\n\n  const listTempuraRolls = tempuraRolls.map(tempuraRoll => (\n    <li key={tempuraRolls.id}>{tempuraRoll.item}</li>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Sushi\" {...a11yProps(0)} />\n          <Tab label=\"Regular Rolls\" {...a11yProps(1)} />\n          <Tab label=\"Fresh Rolls\" {...a11yProps(2)} />\n          <Tab label=\"Tempura Rolls\" {...a11yProps(3)} />\n          <Tab label=\"Baked Rolls\" {...a11yProps(4)} />\n          <Tab label=\"Specialty Item\" {...a11yProps(5)} />\n          <Tab label=\"Appetizers\" {...a11yProps(6)} />\n          <Tab label=\"Kitchen\" {...a11yProps(7)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ul>{listSushis}</ul>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ul>{listRegularRolls}</ul>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ul>{listFreshRolls}</ul>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}